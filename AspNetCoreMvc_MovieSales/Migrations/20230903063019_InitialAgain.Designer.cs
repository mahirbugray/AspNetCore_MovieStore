// <auto-generated />
using System;
using AspNetCoreMvc_MovieSales.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNetCoreMvc_MovieSales.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20230903063019_InitialAgain")]
    partial class InitialAgain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Beşiktaş-İstanbul",
                            Email = "ali@gmail.com",
                            Name = "Ali Uçar",
                            Password = "123",
                            Phone = "532 432 45 67"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Kadıköy-İstanbul",
                            Email = "nese@gmail.com",
                            Name = "Neşe Sever",
                            Password = "456",
                            Phone = "542 532 45 77"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Bakırköy-İstanbul",
                            Email = "oya@gmail.com",
                            Name = "Oya Koşar",
                            Password = "789",
                            Phone = "537 132 88 99"
                        });
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Acılı, hüzünlü, dramatik",
                            Name = "Dram"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Komik, neşeli, eğlenceli",
                            Name = "Komedi"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Hem komik, hem romantik, eğlenceli",
                            Name = "Romantik Komedi"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Çok korkunç",
                            Name = "Korku, Gerilim"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Tarihi savaş ve aksiyon",
                            Name = "Savaş"
                        });
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("/images/filmAdi.jpg");

                    b.Property<bool>("IsDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPopuler")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cast = "Bradd Pitt, Orlando Bloom",
                            Director = "Wolfgan Pettersen",
                            GenreId = 5,
                            ImageUrl = "/images/Barbie.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Truva",
                            Price = 250m,
                            ReleaseDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 12,
                            Summary = "Eski çağlarda ünlü truva savaşından kesitler"
                        },
                        new
                        {
                            Id = 2,
                            Cast = "Ananda George, Donny Alamsyah",
                            Director = "Gareth Evans",
                            GenreId = 5,
                            ImageUrl = "/images/BlueBeetle.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Baskın",
                            Price = 250m,
                            ReleaseDate = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "Operasyon timinin uyuşturucu baskınları"
                        },
                        new
                        {
                            Id = 3,
                            Cast = "Leonardo Di Caprio, Cate Winslet",
                            Director = "James Cameron",
                            GenreId = 1,
                            ImageUrl = "/images/CehennemMelekleri.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Titanic",
                            Price = 250m,
                            ReleaseDate = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "Lüks Titanic gemisinin hazin öyküsü"
                        },
                        new
                        {
                            Id = 4,
                            Cast = "Bradd Pitt, Edward Norton",
                            Director = "David Lyinch",
                            GenreId = 1,
                            ImageUrl = "/images/Doru.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Fight Club",
                            Price = 250m,
                            ReleaseDate = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "Dövüş kulübü, ilk kural bahsetmemek"
                        },
                        new
                        {
                            Id = 5,
                            Cast = "Bradd Pitt, Christoph Wals",
                            Director = "Quantin Tarantino",
                            GenreId = 5,
                            ImageUrl = "/images/Efsunlu3.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Soysuzlar Çetesi",
                            Price = 250m,
                            ReleaseDate = new DateTime(2006, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "2.Dünya savaşından kesitler"
                        },
                        new
                        {
                            Id = 6,
                            Cast = "Bradd Pitt, Christoph Wals",
                            Director = "Quantin Tarantino",
                            GenreId = 2,
                            ImageUrl = "/images/GranTurismo.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Soysuzlar Çetesi",
                            Price = 250m,
                            ReleaseDate = new DateTime(2006, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "2.Dünya savaşından kesitler"
                        },
                        new
                        {
                            Id = 7,
                            Cast = "Bradd Pitt, Christoph Wals",
                            Director = "Quantin Tarantino",
                            GenreId = 4,
                            ImageUrl = "/images/GucYuzukleri.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Soysuzlar Çetesi",
                            Price = 250m,
                            ReleaseDate = new DateTime(2006, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "2.Dünya savaşından kesitler"
                        },
                        new
                        {
                            Id = 8,
                            Cast = "Bradd Pitt, Christoph Wals",
                            Director = "Quantin Tarantino",
                            GenreId = 5,
                            ImageUrl = "/images/Hulk.webp",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Soysuzlar Çetesi",
                            Price = 250m,
                            ReleaseDate = new DateTime(2006, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "2.Dünya savaşından kesitler"
                        },
                        new
                        {
                            Id = 9,
                            Cast = "Bradd Pitt, Christoph Wals",
                            Director = "Quantin Tarantino",
                            GenreId = 1,
                            ImageUrl = "/images/Meg2.jpg",
                            IsDiscount = false,
                            IsLocal = false,
                            IsPopuler = false,
                            Name = "Soysuzlar Çetesi",
                            Price = 250m,
                            ReleaseDate = new DateTime(2006, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 10,
                            Summary = "2.Dünya savaşından kesitler"
                        });
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.MovieSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("MovieSales");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.MovieSaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("MovieSaleId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieSaleId");

                    b.ToTable("MovieSaleDetails");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.Movie", b =>
                {
                    b.HasOne("AspNetCoreMvc_MovieSales.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.MovieSale", b =>
                {
                    b.HasOne("AspNetCoreMvc_MovieSales.Models.Customer", "Customer")
                        .WithMany("MovieSales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.MovieSaleDetail", b =>
                {
                    b.HasOne("AspNetCoreMvc_MovieSales.Models.Movie", "Movie")
                        .WithMany("MovieSaleDetails")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNetCoreMvc_MovieSales.Models.MovieSale", "MovieSale")
                        .WithMany("MovieSaleDetails")
                        .HasForeignKey("MovieSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("MovieSale");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.Customer", b =>
                {
                    b.Navigation("MovieSales");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.Movie", b =>
                {
                    b.Navigation("MovieSaleDetails");
                });

            modelBuilder.Entity("AspNetCoreMvc_MovieSales.Models.MovieSale", b =>
                {
                    b.Navigation("MovieSaleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
